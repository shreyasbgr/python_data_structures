Instructions:
BST: Constructor
Write the Node and BinarySearchTree constructors

*** Solution Explanation ***
class Node:
    def __init__(self, value):
        self.value = value
        self.left = None
        self.right = None
        
 
class BinarySearchTree:
    def __init__(self):
        self.root = None    


Code with inline comments:



# define the Node class
class Node:
    # constructor with the value of the node as the argument
    def __init__(self, value):
        self.value = value # set the value of the node
        self.left = None  # set the left child to None
        self.right = None # set the right child to None
 
# define the BinarySearchTree class
class BinarySearchTree:
    # constructor for the binary search tree
    def __init__(self):
        self.root = None # set the root of the tree to None


*** Code ***
# class Node:
    ## WRITE NODE CONSTRUCTOR HERE ##
    #                               #
    #                               #
    #                               #
    #                               #
    #################################
        

# class BinarySearchTree:
    ## WRITE BST CONSTRUCTOR HERE ##
    #                              #
    #                              #
    #                              #
    #                              #
    ################################




my_tree = BinarySearchTree()

print("Root:", my_tree.root)


 
"""
    EXPECTED OUTPUT:
    ----------------
    Root: None

"""